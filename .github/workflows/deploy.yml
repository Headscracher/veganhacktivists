env:
  REGISTRY: ${{ secrets.DIGITALOCEAN_REGISTRY_HOST}}
  IMAGE_NAME: ${{ github.event.repository.name }}

jobs:

build_and_push:
  runs-on: ubuntu-latest
  if: github.event_name == 'push'

  steps:
    - name: Checkout main
      uses: actions/checkout@v2

    - name: Build container image
      run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 600

    - name: Push image to DigitalOcean Container Registry
      run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

deploy:
  runs-on: ubuntu-latest
  if: github.event_name == 'push'
  needs: build_and_push

  steps:
    - name: Deploy to Digital Ocean droplet via SSH action
      uses: appleboy/ssh-action@v0.1.3
      with:
        HOST: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        KEY: ${{ secrets.SSH_SECRET_KEY }}
        envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,COMMAND
        script: |
          # Stop running container
          docker stop $(echo $IMAGE_NAME)
          # Remove old container
          docker rm $(echo $IMAGE_NAME)
          # Run a new container from a new image
          docker run -d \
          --restart always \
          -p 80:80 \
          --name $(echo $IMAGE_NAME) \
          $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
